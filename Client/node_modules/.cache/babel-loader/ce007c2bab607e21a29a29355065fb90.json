{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marek\\\\Desktop\\\\Opiskelu\\\\MatkakertomusClientServer\\\\Client\\\\src\\\\components\\\\ResuableComponents\\\\Modal\\\\ModalContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useRef, useEffect, useReducer, useContext } from 'react';\nimport ReactDOM, { createPortal } from 'react-dom';\nimport './Modal.css';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport reducer from './ModalReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isOpen: false,\n  template: null,\n  title: ''\n};\n\nconst ModalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const root = useRef(null);\n  const modal = useRef(null);\n\n  const handleBackDropClick = event => {\n    if (modal && modal.current.contains(event.target)) return;\n    closeModal();\n  };\n\n  const closeModal = () => {\n    const node = ReactDOM.findDOMNode(modal.current);\n    node.classList.toggle('closeModal');\n    const timeout = setTimeout(() => {\n      dispatch({\n        type: 'CLOSE_MODAL'\n      });\n    }, 300);\n    return () => clearTimeout(timeout);\n  }; //options: !template, title\n\n\n  const openModal = options => {\n    if (!options.template) throw new Error(`Modal template is missing`);\n    dispatch({\n      type: 'OPEN_MODAL',\n      payload: { ...options\n      }\n    });\n  };\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    root.current.id = '__react-modal';\n    document.body.appendChild(root.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: { ...state,\n      openModal,\n      closeModal\n    },\n    children: [children, root.current && state.isOpen && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: handleBackDropClick,\n        className: \"backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: modal,\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: state.title ? 'withTitle titleAndClosebtn' : 'titleAndClosebtn',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              className: \"closeBtn\",\n              children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n                color: 'red',\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), state.template]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), root.current)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalProvider, \"MqA8qg2hxIz3Ug4iciOhdR4QVHs=\");\n\n_c = ModalProvider;\nexport default ModalProvider;\nexport const useModalContext = () => {\n  _s2();\n\n  return useContext(ModalContext);\n};\n\n_s2(useModalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["C:/Users/marek/Desktop/Opiskelu/MatkakertomusClientServer/Client/src/components/ResuableComponents/Modal/ModalContext.jsx"],"names":["React","createContext","useRef","useEffect","useReducer","useContext","ReactDOM","createPortal","AiOutlineClose","reducer","ModalContext","initialState","isOpen","template","title","ModalProvider","children","state","dispatch","root","modal","handleBackDropClick","event","current","contains","target","closeModal","node","findDOMNode","classList","toggle","timeout","setTimeout","type","clearTimeout","openModal","options","Error","payload","document","createElement","id","body","appendChild","useModalContext"],"mappings":"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","sourcesContent":["import React, {\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useReducer,\r\n  useContext,\r\n} from 'react';\r\nimport ReactDOM, { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport reducer from './ModalReducer';\r\n\r\nconst ModalContext = createContext();\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  template: null,\r\n  title: '',\r\n};\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const root = useRef(null);\r\n  const modal = useRef(null);\r\n\r\n  const handleBackDropClick = (event) => {\r\n    if (modal && modal.current.contains(event.target)) return;\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    const node = ReactDOM.findDOMNode(modal.current);\r\n    node.classList.toggle('closeModal');\r\n    const timeout = setTimeout(() => {\r\n      dispatch({ type: 'CLOSE_MODAL' });\r\n    }, 300);\r\n    return () => clearTimeout(timeout);\r\n  };\r\n  //options: !template, title\r\n  const openModal = (options) => {\r\n    if (!options.template) throw new Error(`Modal template is missing`);\r\n    dispatch({ type: 'OPEN_MODAL', payload: { ...options } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    root.current = document.createElement('div');\r\n    root.current.id = '__react-modal';\r\n    document.body.appendChild(root.current);\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ ...state, openModal, closeModal }}>\r\n      {children}\r\n      {root.current &&\r\n        state.isOpen &&\r\n        createPortal(\r\n          <>\r\n            <div onMouseDown={handleBackDropClick} className=\"backdrop\">\r\n              <div ref={modal} className=\"modal\">\r\n                <div\r\n                  className={\r\n                    state.title\r\n                      ? 'withTitle titleAndClosebtn'\r\n                      : 'titleAndClosebtn'\r\n                  }\r\n                >\r\n                  <div className=\"title\">\r\n                    <h2>{state.title}</h2>\r\n                  </div>\r\n                  <button onClick={closeModal} className=\"closeBtn\">\r\n                    <AiOutlineClose color={'red'} size={25} />\r\n                  </button>\r\n                </div>\r\n                {state.template}\r\n              </div>\r\n            </div>\r\n          </>,\r\n          root.current\r\n        )}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n\r\nexport const useModalContext = () => {\r\n  return useContext(ModalContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}