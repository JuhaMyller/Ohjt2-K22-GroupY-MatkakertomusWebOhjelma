{"ast":null,"code":"export const Days = ['Ma', 'Ti', 'Ke', 'To', 'Pe', 'La', 'Su'];\nexport const getMonth = month => {\n  switch (month) {\n    case 0:\n      return 'Tammikuu';\n\n    case 1:\n      return 'Helmikuu';\n\n    case 2:\n      return 'Maaliskuu';\n\n    case 3:\n      return 'Huuhtikuu';\n\n    case 4:\n      return 'Toukokuu';\n\n    case 5:\n      return 'Kes채kuu';\n\n    case 6:\n      return 'Hein채kuu';\n\n    case 7:\n      return 'Elokuu';\n\n    case 8:\n      return 'Syyskuu';\n\n    case 9:\n      return 'Lokakuu';\n\n    case 10:\n      return 'Marraskuu';\n\n    case 11:\n      return 'Joulukuu';\n\n    default:\n      throw new Error('Not valid month');\n  }\n};\nexport const setUpCalendar = (options, setCalendar) => {\n  const date = new Date(Date.UTC(options.year, options.month - 1, 1));\n  const calendarFirstDay = date.getDay() === 0 ? 6 : date.getDay() - 1;\n  const dateArr = Array(7).fill(null);\n  let i = calendarFirstDay;\n\n  while (date.getMonth() === options.month - 1) {\n    dateArr[i] = new Date(date);\n    date.setUTCDate(date.getUTCDate() + 1);\n    i++;\n  }\n\n  setCalendar(dateArr);\n};\nexport const formatDate = date => {\n  if (!date) return;\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n};\nexport const setDate = () => {\n  const date = new Date();\n  date.setHours(0, 0, 0);\n  return date;\n};\nexport const hideDay = (currDay, array) => {\n  const month = array[array.length - 1];\n  if ((currDay === null || currDay === void 0 ? void 0 : currDay.getMonth()) !== (month === null || month === void 0 ? void 0 : month.getMonth())) return 'hidden';\n};\nexport const isDisabled = (startDay, currDay, mode) => {\n  if (!currDay) return;\n  const date = setDate();\n  if (mode === 'endDate' && currDay.getTime() < startDay.getTime()) return true;\n  if (currDay.getTime() < date.getTime()) return true;\n};\nexport const checkDateRange = (currDay, startDay, endDay) => {\n  if (!currDay) return;\n  startDay.setHours(0, 0, 0);\n  endDay.setHours(3, 0, 0);\n\n  if (currDay.getTime() >= startDay.getTime() && currDay.getTime() <= endDay.getTime()) {\n    return {\n      color: 'white',\n      background: '#4f5d75'\n    };\n  }\n};\nexport const changeCalendarMonth = (option, setDates) => {\n  if (option === 'NEXT' || option === 'PREV') setDates(dates => {\n    const m = dates.month;\n    const y = dates.year;\n\n    if (option === 'NEXT') {\n      return m === 12 ? {\n        month: 1,\n        year: y + 1\n      } : {\n        month: m + 1,\n        year: y\n      };\n    }\n\n    return m === 1 ? {\n      month: 12,\n      year: y - 1\n    } : {\n      month: m - 1,\n      year: y\n    };\n  });else throw new Error('Not valid option');\n};","map":{"version":3,"sources":["C:/Users/marek/Desktop/Opiskelu/MatkakertomusClientServer/Client/src/components/LisaaTarinaSivu/DateInput/Utils.js"],"names":["Days","getMonth","month","Error","setUpCalendar","options","setCalendar","date","Date","UTC","year","calendarFirstDay","getDay","dateArr","Array","fill","i","setUTCDate","getUTCDate","formatDate","day","getDate","getFullYear","setDate","setHours","hideDay","currDay","array","length","isDisabled","startDay","mode","getTime","checkDateRange","endDay","color","background","changeCalendarMonth","option","setDates","dates","m","y"],"mappings":"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","sourcesContent":["export const Days = ['Ma', 'Ti', 'Ke', 'To', 'Pe', 'La', 'Su'];\r\nexport const getMonth = (month) => {\r\n  switch (month) {\r\n    case 0:\r\n      return 'Tammikuu';\r\n    case 1:\r\n      return 'Helmikuu';\r\n    case 2:\r\n      return 'Maaliskuu';\r\n    case 3:\r\n      return 'Huuhtikuu';\r\n    case 4:\r\n      return 'Toukokuu';\r\n    case 5:\r\n      return 'Kes채kuu';\r\n    case 6:\r\n      return 'Hein채kuu';\r\n    case 7:\r\n      return 'Elokuu';\r\n    case 8:\r\n      return 'Syyskuu';\r\n    case 9:\r\n      return 'Lokakuu';\r\n    case 10:\r\n      return 'Marraskuu';\r\n    case 11:\r\n      return 'Joulukuu';\r\n    default:\r\n      throw new Error('Not valid month');\r\n  }\r\n};\r\n\r\nexport const setUpCalendar = (options, setCalendar) => {\r\n  const date = new Date(Date.UTC(options.year, options.month - 1, 1));\r\n  const calendarFirstDay = date.getDay() === 0 ? 6 : date.getDay() - 1;\r\n  const dateArr = Array(7).fill(null);\r\n  let i = calendarFirstDay;\r\n\r\n  while (date.getMonth() === options.month - 1) {\r\n    dateArr[i] = new Date(date);\r\n    date.setUTCDate(date.getUTCDate() + 1);\r\n    i++;\r\n  }\r\n\r\n  setCalendar(dateArr);\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  if (!date) return;\r\n  const day = date.getDate();\r\n  const month = date.getMonth() + 1;\r\n  const year = date.getFullYear();\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\nexport const setDate = () => {\r\n  const date = new Date();\r\n  date.setHours(0, 0, 0);\r\n  return date;\r\n};\r\n\r\nexport const hideDay = (currDay, array) => {\r\n  const month = array[array.length - 1];\r\n  if (currDay?.getMonth() !== month?.getMonth()) return 'hidden';\r\n};\r\n\r\nexport const isDisabled = (startDay, currDay, mode) => {\r\n  if (!currDay) return;\r\n  const date = setDate();\r\n  if (mode === 'endDate' && currDay.getTime() < startDay.getTime()) return true;\r\n\r\n  if (currDay.getTime() < date.getTime()) return true;\r\n};\r\n\r\nexport const checkDateRange = (currDay, startDay, endDay) => {\r\n  if (!currDay) return;\r\n  startDay.setHours(0, 0, 0);\r\n  endDay.setHours(3, 0, 0);\r\n\r\n  if (\r\n    currDay.getTime() >= startDay.getTime() &&\r\n    currDay.getTime() <= endDay.getTime()\r\n  ) {\r\n    return { color: 'white', background: '#4f5d75' };\r\n  }\r\n};\r\n\r\nexport const changeCalendarMonth = (option, setDates) => {\r\n  if (option === 'NEXT' || option === 'PREV')\r\n    setDates((dates) => {\r\n      const m = dates.month;\r\n      const y = dates.year;\r\n\r\n      if (option === 'NEXT') {\r\n        return m === 12 ? { month: 1, year: y + 1 } : { month: m + 1, year: y };\r\n      }\r\n      return m === 1 ? { month: 12, year: y - 1 } : { month: m - 1, year: y };\r\n    });\r\n  else throw new Error('Not valid option');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}