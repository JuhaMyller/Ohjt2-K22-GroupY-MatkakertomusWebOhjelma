{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marek\\\\Desktop\\\\Opiskelu\\\\MatkakertomusClientServer\\\\Client\\\\src\\\\components\\\\LisaaTarinaSivu\\\\DateInput\\\\DateTimespanPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BsArrowRight } from 'react-icons/bs';\nimport DatePickerCalendar from './DatepickerCalendar';\nimport { formatDate } from './Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateTimespanPicker = _ref => {\n  _s();\n\n  let {\n    startDate,\n    endDate,\n    onDateChange\n  } = _ref;\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [mode, setMode] = useState('');\n\n  const inputClick = e => {\n    const {\n      name\n    } = e.target;\n\n    if (!showCalendar) {\n      setShowCalendar(true);\n      return setMode(name);\n    }\n\n    if (mode === name) {\n      setMode('');\n      return setShowCalendar(false);\n    }\n\n    if (mode !== name) return setMode(name);\n  };\n\n  useLayoutEffect(() => {\n    if (mode === 'startDate') return setMode('endDate');\n\n    if (mode === 'endDate') {\n      setMode('');\n      setShowCalendar(false);\n    }\n  }, [startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: mode === 'startDate' ? {\n          background: '#f2f2f2'\n        } : {},\n        className: \"startDate\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => inputClick(e),\n          name: \"startDate\",\n          children: formatDate(startDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(BsArrowRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: mode === 'endDate' ? {\n          background: '#f2f2f2'\n        } : {},\n        className: \"endDate\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => inputClick(e),\n          name: \"endDate\",\n          children: formatDate(endDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: showCalendar && /*#__PURE__*/_jsxDEV(DatePickerCalendar, {\n        onDateChange: onDateChange,\n        mode: mode,\n        startDate: startDate,\n        endDate: endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateTimespanPicker, \"20AKXbAd8YfzI5bGE3A8a1kEjlM=\");\n\n_c = DateTimespanPicker;\nDateTimespanPicker.propTypes = {};\nconst Wrapper = styled.div`\n  max-width: 230px;\n  position: relative;\n  margin: 50px auto;\n\n  .calendar-inputs {\n    border: 2px solid #f2f2f2;\n    display: flex;\n    height: 40px;\n    width: 100%;\n    white-space: nowrap;\n    button {\n      border: none;\n      height: 100%;\n      color: #6c757d;\n\n      background: inherit;\n      font-family: inherit;\n      font-size: 1rem;\n      padding: 0 5px;\n      line-height: 36px;\n      cursor: pointer;\n    }\n  }\n  .startDate {\n    height: 100%;\n    :hover {\n      background: #f2f2f2;\n    }\n  }\n  .endDate {\n    height: 100%;\n    :hover {\n      background: #f2f2f2;\n    }\n  }\n\n  .icon {\n    display: flex;\n    place-items: center;\n    margin: auto;\n    margin-right: 20px;\n    color: #6c757d;\n  }\n  .calendar {\n    position: absolute;\n    top: 45px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n`;\n_c2 = Wrapper;\nexport default DateTimespanPicker;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateTimespanPicker\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/marek/Desktop/Opiskelu/MatkakertomusClientServer/Client/src/components/LisaaTarinaSivu/DateInput/DateTimespanPicker.jsx"],"names":["React","useLayoutEffect","useState","styled","BsArrowRight","DatePickerCalendar","formatDate","DateTimespanPicker","startDate","endDate","onDateChange","showCalendar","setShowCalendar","mode","setMode","inputClick","e","name","target","background","propTypes","Wrapper","div"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport DatePickerCalendar from './DatepickerCalendar';\r\nimport { formatDate } from './Utils';\r\n\r\nconst DateTimespanPicker = ({ startDate, endDate, onDateChange }) => {\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n\r\n  const inputClick = (e) => {\r\n    const { name } = e.target;\r\n\r\n    if (!showCalendar) {\r\n      setShowCalendar(true);\r\n      return setMode(name);\r\n    }\r\n    if (mode === name) {\r\n      setMode('');\r\n      return setShowCalendar(false);\r\n    }\r\n    if (mode !== name) return setMode(name);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (mode === 'startDate') return setMode('endDate');\r\n    if (mode === 'endDate') {\r\n      setMode('');\r\n      setShowCalendar(false);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"calendar-inputs\">\r\n        <div\r\n          style={mode === 'startDate' ? { background: '#f2f2f2' } : {}}\r\n          className=\"startDate\"\r\n        >\r\n          <button type=\"button\" onClick={(e) => inputClick(e)} name=\"startDate\">\r\n            {formatDate(startDate)}\r\n          </button>\r\n        </div>\r\n        <div className=\"icon\">\r\n          <BsArrowRight size={20} />\r\n        </div>\r\n        <div\r\n          style={mode === 'endDate' ? { background: '#f2f2f2' } : {}}\r\n          className=\"endDate\"\r\n        >\r\n          <button type=\"button\" onClick={(e) => inputClick(e)} name=\"endDate\">\r\n            {formatDate(endDate)}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"calendar\">\r\n        {showCalendar && (\r\n          <DatePickerCalendar\r\n            onDateChange={onDateChange}\r\n            mode={mode}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\nDateTimespanPicker.propTypes = {};\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 230px;\r\n  position: relative;\r\n  margin: 50px auto;\r\n\r\n  .calendar-inputs {\r\n    border: 2px solid #f2f2f2;\r\n    display: flex;\r\n    height: 40px;\r\n    width: 100%;\r\n    white-space: nowrap;\r\n    button {\r\n      border: none;\r\n      height: 100%;\r\n      color: #6c757d;\r\n\r\n      background: inherit;\r\n      font-family: inherit;\r\n      font-size: 1rem;\r\n      padding: 0 5px;\r\n      line-height: 36px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .startDate {\r\n    height: 100%;\r\n    :hover {\r\n      background: #f2f2f2;\r\n    }\r\n  }\r\n  .endDate {\r\n    height: 100%;\r\n    :hover {\r\n      background: #f2f2f2;\r\n    }\r\n  }\r\n\r\n  .icon {\r\n    display: flex;\r\n    place-items: center;\r\n    margin: auto;\r\n    margin-right: 20px;\r\n    color: #6c757d;\r\n  }\r\n  .calendar {\r\n    position: absolute;\r\n    top: 45px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n`;\r\n\r\nexport default DateTimespanPicker;\r\n"]},"metadata":{},"sourceType":"module"}